/**
 *  If you want to override some bootstrap variables, you have to change values here.
 *  The list of variables are listed here bower_components/bootstrap-sass/assets/stylesheets/bootstrap/_variables.scss
 */
$navbar-inverse-link-color: #5AADBB;
$icon-font-path: "../../bootstrap-sass/assets/fonts/bootstrap/";

/**
 *  Do not remove the comments below. It's the markers used by wiredep to inject
 *  sass dependencies when defined in the bower.json of your dependencies
 */
// bower:scss
// endbower

.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

.thumbnail {
  height: 200px;

  img.pull-right {
    width: 50px;
  }
}

/**
 *  Do not remove the comments below. It's the markers used by gulp-inject to inject
 *  all your sass files automatically
 */
// injector
// endinjector
$animationLength: 1.5s;
$animationRadius: 12px;
$dotSize: 8px;

.loader {
  position: relative;
  width: $animationRadius * 3 + $dotSize;
  height: $dotSize;
  margin: 20px 0;
}

.dot {
  display: inline-block;
  width: $dotSize;
  height: $dotSize;
  border-radius: $dotSize * 0.5;
  background: #ccc;
  position: absolute;
}

.dot_1 {
  animation: animateDot1 $animationLength linear infinite;
  left: $animationRadius;
  background: orange;
}

.dot_2 {
  animation: animateDot2 $animationLength linear infinite;
  animation-delay: $animationLength / 3;
  left: $animationRadius * 2;
}

.dot_3 {
  animation: animateDot3 $animationLength linear infinite;
  left: $animationRadius;
}

.dot_4 {
  animation: animateDot4 $animationLength linear infinite;
  animation-delay: $animationLength / 3;
  left: $animationRadius * 2;
}

@keyframes animateDot1 {
  0%{ transform: rotate(0deg) translateX(-$animationRadius); }
  25% { transform: rotate(180deg) translateX(-$animationRadius); }
  75% { transform: rotate(180deg) translateX(-$animationRadius); }
  100% { transform: rotate(360deg) translateX(-$animationRadius); }
}

@keyframes animateDot2 {
  0%{ transform: rotate(-0deg) translateX(-$animationRadius); }
  25% { transform: rotate(-180deg) translateX(-$animationRadius); }
  75% { transform: rotate(-180deg) translateX(-$animationRadius); }
  100% { transform: rotate(-360deg) translateX(-$animationRadius); }
}

@keyframes animateDot3 {
  0%{ transform: rotate(0deg) translateX($animationRadius); }
  25% { transform: rotate(180deg) translateX($animationRadius); }
  75% { transform: rotate(180deg) translateX($animationRadius); }
  100% { transform: rotate(360deg) translateX($animationRadius); }
}

@keyframes animateDot4 {
  0%{ transform: rotate(-0deg) translateX($animationRadius); }
  25% { transform: rotate(-180deg) translateX($animationRadius); }
  75% { transform: rotate(-180deg) translateX($animationRadius); }
  100% { transform: rotate(-360deg) translateX($animationRadius); }
}
